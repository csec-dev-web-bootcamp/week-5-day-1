generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String   @db.VarChar(100)
  lastName  String   @db.VarChar(100)
  email     String   @unique
  password  String   @db.VarChar(120)
  role      UserRole @default(CUSTOMER)
  blocked   Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  image String? @db.VarChar(255)

  order Order[]

  @@map("users")
}

model Product {
  id          String      @id @default(uuid())
  name        String      @db.VarChar(255)
  price       Float       @default(0)
  description String?     @db.Text
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  String?
  orderItems  OrderItem[]

  @@map("prioducts")
}

model Category {
  id      String    @id @default(uuid())
  name    String    @db.VarChar(255)
  product Product[]

  @@map("categories")
}

model OrderItem {
  id         String  @id @default(uuid())
  product    Product @relation(fields: [productId], references: [id])
  quantity   Int     @default(1)
  totalPrice Float?  @default(0)
  order      Order?  @relation(fields: [orderId], references: [id])
  orderId    String?
  productId  String

  @@map("orderItems")
}

model Order {
  id            String        @id @default(uuid())
  user          User          @relation(fields: [userId], references: [id])
  paymentRef    String?       @db.VarChar(255)
  totalPrice    Float
  orderItems    OrderItem[]
  paymentStatus PaymentStatus @default(PENDING)
  userId        String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")
}

enum UserRole {
  ADMIN    @map("admin")
  CUSTOMER @map("customer")
  DRIVER   @map("driver")
}

enum PaymentStatus {
  PENDING  @map("PENDING")
  CANCELED @map("CANCELED")
  NOTPAID  @map("NOTPAID")
  PAID     @map("PAID")
}
